---
- name: Documentroot
  ansible.builtin.file:
    path: "{{ item.documentroot }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop: "{{ apache_sites }}"
  when:
    - item.documentroot is defined
  become: true
  tags:
    - apache
    - documentroot

- name: Vhost
  ansible.builtin.template:
    src: "{{ item.template | default('apache-http-site.conf.j2') }}"
    dest: "/etc/apache2/sites-available/{{ item.name }}.conf"
    mode: 0644
    backup: "{{ apache_backup_vhosts | default(omit) }}"
  notify: Reload apache
  loop: "{{ apache_sites }}"
  when:
    - item.name != '000-default'
    - item.available is not defined
      or item.available
  become: true
  tags:
    - apache
    - vhost
    - template

- name: Vhost absence
  ansible.builtin.file:
    path: "/etc/apache2/sites-available/{{ item.name }}.conf"
    state: absent
  loop: "{{ apache_sites }}"
  when:
    - item.available is defined
    - not item.available
  become: true
  tags:
    - apache
    - vhost
    - template

- name: Link presence
  ansible.builtin.file:
    src: "../sites-available/{{ item.name }}.conf"
    path:
      "/etc/apache2/sites-enabled/{{ item.index |
      default('') }}{{ item.name }}.conf"
    state: link
  notify: Reload apache
  loop: "{{ apache_sites }}"
  when:
    - not ansible_check_mode
    - item.available is not defined
      or item.available
    - item.enabled is not defined
      or item.enabled
  become: true
  tags:
    - apache
    - vhost
    - link

- name: Link absence
  ansible.builtin.file:
    path:
      "/etc/apache2/sites-enabled/{{ item.index |
      default('') }}{{ item.name }}.conf"
    state: absent
  notify: Reload apache
  loop: "{{ apache_sites }}"
  when:
    ( item.enabled is defined and not item.enabled )
    or ( item.available is defined and not item.available )
  become: true
  tags:
    - apache
    - vhost
    - link
